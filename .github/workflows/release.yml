on:
  push:
    branches:
      - alpha

permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
      - name: Run start script
        run: npm run start
      - name: Get version from package.json
        id: package_version
        run: echo "::set-output name=version::$(jq -r '.version' package.json)"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: index
          path: index.json

  check-release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_release.outputs.exists }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if release already exists
        id: check_release
        run: |
          RELEASE_URL=$(curl -sH "Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ needs.build.outputs.version }})
          if [[ "$RELEASE_URL" == *"\"url\": \"*"* ]]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

  release:
    needs: check-release
    if: needs.check-release.outputs.exists == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: index
          path: .
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: index.json
          tag_name: ${{ needs.build.outputs.version }}
          prerelease: true
          draft: false
